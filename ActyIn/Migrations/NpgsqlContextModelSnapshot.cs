// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Postgres.Context.DBContext;

#nullable disable

namespace ActyIn.Migrations
{
    [DbContext(typeof(NpgsqlContext))]
    partial class NpgsqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Postgres.Context.Entities.AthletesEntity", b =>
                {
                    b.Property<int>("AthletesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AthletesId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FavoriteActivity")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("PostalCode")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("AthletesId");

                    b.ToTable("AthletesInfo");
                });

            modelBuilder.Entity("Postgres.Context.Entities.BookingEntity", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("boolean");

                    b.Property<int>("MatchModelId")
                        .HasColumnType("integer");

                    b.HasKey("BookingId");

                    b.HasIndex("MatchModelId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Postgres.Context.Entities.ChosenActivityEntity", b =>
                {
                    b.Property<int>("ChosenActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChosenActivityId"));

                    b.Property<int>("AthletesEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("ChosenActivityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MatchModelId")
                        .HasColumnType("integer");

                    b.HasKey("ChosenActivityId");

                    b.HasIndex("AthletesEntityId");

                    b.HasIndex("MatchModelId");

                    b.ToTable("ChooseActivityInfo");
                });

            modelBuilder.Entity("Postgres.Context.Entities.FileEntity", b =>
                {
                    b.Property<int>("AthleteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AthleteId"));

                    b.Property<string>("AthleteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.HasKey("AthleteId");

                    b.ToTable("AthleteImageProfile");
                });

            modelBuilder.Entity("Postgres.Context.Entities.MatchModelEntity", b =>
                {
                    b.Property<int>("MatchModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatchModelId"));

                    b.Property<int>("ChosenActivityId")
                        .HasColumnType("integer");

                    b.Property<bool>("LikeThePotentialAthlete")
                        .HasColumnType("boolean");

                    b.HasKey("MatchModelId");

                    b.ToTable("MatchModels");
                });

            modelBuilder.Entity("Postgres.Context.Entities.BookingEntity", b =>
                {
                    b.HasOne("Postgres.Context.Entities.MatchModelEntity", "MatchModel")
                        .WithOne("BookingEntity")
                        .HasForeignKey("Postgres.Context.Entities.BookingEntity", "MatchModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatchModel");
                });

            modelBuilder.Entity("Postgres.Context.Entities.ChosenActivityEntity", b =>
                {
                    b.HasOne("Postgres.Context.Entities.AthletesEntity", "AthletesEntity")
                        .WithMany("ChosenActivities")
                        .HasForeignKey("AthletesEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Postgres.Context.Entities.MatchModelEntity", "MatchModel")
                        .WithMany("ChosenActivities")
                        .HasForeignKey("MatchModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AthletesEntity");

                    b.Navigation("MatchModel");
                });

            modelBuilder.Entity("Postgres.Context.Entities.AthletesEntity", b =>
                {
                    b.Navigation("ChosenActivities");
                });

            modelBuilder.Entity("Postgres.Context.Entities.MatchModelEntity", b =>
                {
                    b.Navigation("BookingEntity");

                    b.Navigation("ChosenActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
